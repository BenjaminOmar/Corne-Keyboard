/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_nb.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 900

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "base";
            bindings = <
&none             &kp Q               &kp W           &kp E             &kp R                 &kp T          &kp Y            &kp U                &kp I              &kp O            &kp P                         &kp NB_A_RING
&lt 3 LEFT_SHIFT  &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_COMMAND F    &lt 6 G        &lt 4 H          &mt RIGHT_COMMAND J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL NB_O_SLASH  &kp NB_AE
&none             &kp Z               &kp X           &kp C             &kp V                 &kp B          &kp N            &kp M                &kp COMMA          &kp DOT          &none                         &none
                                                      &lt 5 LC(TAB)     &mt LEFT_COMMAND TAB  &lt 2 SPACE    &lt 1 BACKSPACE  &kp ENTER            &kp LA(LG(B))
            >;
        };

        Movement {
            display-name = "movement";
            bindings = <
&none  &none                          &none                  &none                      &none                          &none      &none         &kp HOME  &kp UP    &kp END    &none  &none
&none  &mt LEFT_CONTROL LEFT_CONTROL  &mt LEFT_ALT LEFT_ALT  &mt LEFT_SHIFT LEFT_SHIFT  &mt LEFT_COMMAND LEFT_COMMAND  &kp ESC    &kp NB_PLUS   &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
&none  &none                          &none                  &none                      &none                          &none      &kp NB_MINUS  &none     &none     &none      &none  &none
                                                             &none                      &kp LS(LC(LG(LEFT_ALT)))       &mo 7      &none         &none     &none
            >;
        };

        Symbols {
            display-name = "symbols";
            bindings = <
&none  &kp NB_DOLLAR                          &kp NB_LESS_THAN         &kp NB_GREATER_THAN  &kp NB_UNDERSCORE  &kp NB_PIPE        &kp NB_AMPERSAND    &kp LA(LS(NB_N8))        &kp LS(LA(N9))            &kp NB_EQUAL  &none                &none
&none  &kp NB_DOUBLE_QUOTES                   &kp LA(NB_SINGLE_QUOTE)  &kp NB_SEMICOLON     &kp NB_COLON       &kp NB_SLASH       &kp NB_QUESTION     &kp NB_LEFT_PARENTHESIS  &kp NB_RIGHT_PARENTHESIS  &kp NB_PLUS   &kp NB_SINGLE_QUOTE  &none
&none  &mt LA(LC(LG(LEFT_SHIFT))) LEFT_SHIFT  &none                    &none                &kp NB_HASH        &kp NB_ASTERISK    &kp NB_EXCLAMATION  &kp NB_LEFT_BRACKET      &kp NB_RIGHT_BRACKET      &kp NB_MINUS  &none                &none
                                                                       &none                &none              &none              &mo 7               &none                    &none
            >;
        };

        Misc {
            display-name = "misc";
            bindings = <
&none  &none  &bt BT_CLR  &none  &bt BT_PRV  &bt BT_NXT    &none  &none  &none  &none  &none  &none
&none  &none  &none       &none  &none       &none         &none  &none  &none  &none  &none  &none
&none  &none  &none       &none  &none       &none         &none  &none  &none  &none  &none  &none
                          &none  &none       &none         &none  &none  &none
            >;
        };

        Apps {
            display-name = "apps";
            bindings = <
&kp LS(LA(LC(LG(NB_N1))))  &kp LC(NB_N8)  &kp LC(NB_N1)  &kp LC(NB_N2)  &kp LC(NB_N3)  &kp LC(NB_N0)        &none  &none  &none  &none  &none  &none
&none                      &kp LC(NB_N9)  &none          &none          &kp LC(NB_N6)  &kp LC(LS(NB_N6))    &none  &none  &none  &none  &none  &none
&none                      &none          &none          &none          &none          &kp LG(Q)            &none  &none  &none  &none  &none  &none
                                                         &none          &none          &none                &none  &none  &none
            >;
        };

        IDE {
            display-name = "ide";
            bindings = <
&none  &none  &none  &none  &none  &none    &kp LS(LA(LC(LG(F3))))  &kp LS(LA(LC(LG(F3))))     &kp RG(W)        &none                      &none  &none
&none  &none  &none  &none  &none  &none    &kp LS(LA(LC(LG(F1))))  &kp LS(LA(LC(LG(NB_N5))))  &kp LC(NB_PLUS)  &kp LS(LA(LC(LG(NB_N6))))  &none  &none
&none  &none  &none  &none  &none  &none    &kp LS(LA(LC(LG(F2))))  &none                      &none            &none                      &none  &none
                     &none  &none  &none    &none                   &none                      &none
            >;
        };

        Nums {
            display-name = "nums";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        mouse {
            display-name = "mouse";
            bindings = <
&none  &none  &none  &none      &none      &none    &none  &none           &mmv MOVE_UP    &none            &none  &none
&none  &none  &mo 8  &mkp RCLK  &mkp LCLK  &none    &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&none  &none  &none  &none      &none      &none    &none  &none           &none           &none            &none  &none
                     &none      &none      &none    &none  &none           &none
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans                 &trans  &trans    &trans  &trans           &msc SCRL_DOWN  &trans          &trans  &trans
&trans  &trans  &trans  &mt LEFT_ALT LEFT_ALT  &trans  &trans    &trans  &msc SCRL_RIGHT  &msc SCRL_UP    &msc SCRL_LEFT  &trans  &trans
&trans  &trans  &trans  &trans                 &trans  &trans    &trans  &trans           &trans          &trans          &trans  &trans
                        &trans                 &trans  &trans    &trans  &trans           &trans
            >;
        };
    };
};
